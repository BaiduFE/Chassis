var Map = function() {
		function Tt(e, t, n, r, i, s, o, u, a) {
			vt = r - e,
			mt = i - t,
			gt = s - n;
			var f = 1 / Math.sqrt(vt * vt + mt * mt + gt * gt);
			vt *= f,
			mt *= f,
			gt *= f,
			ft = gt * u - mt * a,
			lt = vt * a - gt * o,
			ct = mt * o - vt * u;
			var l = 1 / Math.sqrt(ft * ft + lt * lt + ct * ct);
			ft *= l,
			lt *= l,
			ct *= l,
			ht = gt * lt - mt * ct,
			pt = vt * ct - gt * ft,
			dt = mt * ft - vt * lt,
			yt = -(e * ft + t * lt + n * ct),
			bt = -(e * ht + t * pt + n * dt),
			wt = -(e * vt + t * mt + n * gt)
		}
		function Nt(e, t, n, r, i, s) {
			var o = -(e * r + t * i + n * s),
			u = o * o - (e * e + t * t + n * n) + 1;
			if (u <= 0) return 0;
			var a = o - Math.sqrt(u);
			if (a <= 0) return 0;
			var f = e + r * a,
			l = t + i * a,
			c = n + s * a,
			h = (Math.PI * .5 - Math.acos(l)) * 180 / Math.PI,
			p = Math.atan2(c, f) * 180 / Math.PI;
			return [h, p]
		}
		function Ct(e, t, n, r, i) {
			e *= Math.PI / 180,
			t *= Math.PI / 180,
			n *= Math.PI / 180,
			r *= Math.PI / 180;
			var s = Math.cos(e) * Math.cos(t),
			o = Math.sin(e),
			u = Math.cos(e) * Math.sin(t);
			Et = s + i * Math.cos(e + r) * Math.cos(t + n),
			St = o + i * Math.sin(e + r),
			xt = u + i * Math.cos(e + r) * Math.sin(t + n),
			Tt(Et, St, xt, s, o, u, 0, 1, 0)
		}
		function kt(e, t, n, r) {
			if (z == 3) return Lt(e, t, n);
			var i = e * ft + t * lt + n * ct + yt,
			s = e * ht + t * pt + n * dt + bt,
			o = e * vt + t * mt + n * gt + wt,
			u = S / o;
			return [S * .5 + i * u - (r ? 0 : x), S * .5 + s * u]
		}
		function Lt(e, t, n) {
			var r = e * ft + t * lt + n * ct + yt,
			i = e * ht + t * pt + n * dt + bt,
			s = e * vt + t * mt + n * gt + wt,
			o = E / s,
			u = (S - E) / 2;
			return [E * .5 + r * o, E * .5 + i * o + u]
		}
		function At(e, t, n) {
			return e *= Math.PI / 180,
			t *= Math.PI / 180,
			kt(Math.cos(e) * Math.cos(t), Math.sin(e), Math.cos(e) * Math.sin(t), n)
		}
		function Ot(e, t) {
			var n = 1 / (E - 1),
			r = 1 / (S - 1),
			i = e * n - .5,
			s = t * r - .5,
			o = 1 / Math.sqrt(i * i + s * s + 1);
			return i *= o,
			s *= o,
			Nt(Et, St, xt, i * ft + s * ht + o * vt, i * lt + s * pt + o * mt, i * ct + s * dt + o * gt)
		}
		var e = true,
		t = true,
		n = true,
		r = ENV.is_mozilla,
		s = ENV.is_webkit,
		o = ENV.is_ie,
		u = ENV.is_mobile;
		try {
			new Int32Array;
		} catch(a) {
			e = false;
		}
		if (ENV.is_ie && !ENV.is_old_ie || $.browser.safari && +$.browser.version.split(".")[0] < 536) t = false;
		var f = {};
		window.requestAnimFrame = function() {
			return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||
			function(e, t) {
				window.setTimeout(e, 11)
			}
		} ();
		var l = $("#map");
		if (l.length == 0) return null;
		var c = $("#map .map_container"),
		h = $("#map canvas"),
		p = h[0],
		d = p.getContext("2d"),
		v = +h.attr("width"),
		m = +h.attr("height"),
		g = v,
		y = m,
		b = 1,
		w = velocity_offset_y = 0,
		E = h.width(),
		S = h.height(),
		x = 0,
		T = 500,
		N = T,
		C = T,
		k = null,
		L = null,
		A = u ? $("#map_area > .time") : $("#map .top_bar .time span"),
		O = $("#map .controls"),
		M = O.find(".play_button"),
		_ = O.find(".timeline"),
		D = E - O.find(".play_button").width(),
		P = $("#map .slider"),
		H = $("#map .timeline .progress"),
		B = P.width() / 2,
		j = $("#map .levels"),
		F = $("#map .map_container .cities"),
		I = $("#map .map_container .location"),
		q,
		R,
		U,
		z = null,
		W,
		X,
		V,
		J,
		K = 0,
		Q = false,
		G = false,
		Y,
		Z,
		et,
		tt = [],
		nt = [],
		rt = [],
		it,
		st,
		ot,
		ut,
		at;
		f.resize = function(e, t, n) {
			e -= 2 * n,
			t -= 2 * n,
			v = g = E = e,
			m = y = S = t;
			if (z == 3) x = 0;
			else {
				var r = At(Y, Z, !0);
				x = Math.max(0, Math.min(S - E, r[0] - E / 2))
			}
			c.css({
				width: e,
				height: t,
				top: n,
				left: n
			}),
			h.attr("width", e).attr("height", t),
			D = E - O.find(".play_button").width(),
			B = P.width() / 2
		};
		var ft, lt, ct, ht, pt, dt, vt, mt, gt, yt, bt, wt, Et, St, xt, Mt = function() {
			var e = z == 0 ? "h:mm": "ddd",
			t = Time.now(),
			n = (t - it) / at;
			if (at == 0 || n < 0) n = 0;
			var r = O.find(".timeline .labels");
			r.html("");
			var i = n * D;
			ENV.is_mobile && (i = Math.round(i) + 3),
			$('<div class="now"></div>').css("left", i).appendTo(r);
			var s = moment(it * 1e3).add("hours", Forecaster.tz_offset_from_local),
			o = moment(st * 1e3).add("hours", Forecaster.tz_offset_from_local);
			z > 0 && s.startOf("day");
			var u, a, f = 0;
			while (s < o) {
				a = (s.unix() - it - 3600 * Forecaster.tz_offset_from_local) / at,
				a >= 0 && (u = $('<div class="tick"></div>').css({
					left: Math.round(a * D)
				}).addClass(f % 2 == 0 ? "even": "odd"), (!ENV.is_mobile || f % 2 == 0) && $('<span class="time"></span>').html(s.format(e)).appendTo(u), u.appendTo(r)),
				z == 0 ? s.add("seconds", 1200) : s.add("days", 1),
				f++
			}
		},
		_t = function(e) {
			if (e) {
				H.show();
				var t = n = D;
				ot = it,
				ut = st
			} else var t = D * (ot - it) / at,
			n = D * (st - ut) / at;
			H.find(".pre").css("width", t),
			H.find(".post").css("width", n)
		},
		Dt = function(e) {
			vn++;
			if (!e && vn % 10 != 0) return;
			var t = moment(hn * 1e3).add("hours", Forecaster.tz_offset_from_local);
			if (z == 0) {
				var n = t.format("h:mma");
				n == "12:NaNam" ? (console.log("NaN on map:", hn, t), A.html("")) : A.html(n)
			} else {
				var r = "";
				hn < K ? hn >= K - 86400 ? r = "Yesterday": r = t.format("[Last] ddd") : hn < K + 86400 ? r = "Today": hn < K + 172800 ? r = "Tomorrow": r = t.format("ddd"),
				A.html(r + " " + t.format("ha"))
			}
		},
		Pt = function() {
			P.set_val(Math.max(0, (hn - it) / at))
		},
		Ht = function(e) {
			yn = true,
			hn = it + e * at,
			hn < ot ? (hn = ot, Pt()) : hn > ut && (hn = ut, Pt())
		},
		Bt = null,
		jt = !1,
		Ft = !1,
		It = function() {
			if (jt) return;
			jt = !0,
			Ft = !0,
			dn ? f.stop_animation() : Rn(),
			ENV.is_mobile || UIManager.outlook_icons.pause(),
			ENV.is_tablet && (UIManager.overview_icons.pause(), UIManager.stop_wobble())
		},
		qt = function(e) {
			if (!e) {
				var t = Time.now(),
				n = Math.abs(t - hn);
				if (z == 0 && n < 600 || z > 0 && n < 36e3) {
					P.animate_to(Math.max(0, (t - it) / at));
					return
				}
			}
			clearInterval(Bt),
			Bt = null,
			jt = !1,
			Dt(!0),
			rr(),
			Vt(),
			ENV.is_mobile || UIManager.outlook_icons.play();
		},
		Rt = function() {
			qt( true );
		},
		Ut = [],
		zt = !1,
		Wt = function(e) {
			Ut.push(e),
			Vt()
		},
		Xt = function() {
			if (jt || !Ut.length) {
				zt = !1;
				return
			}
			zt = !0;
			var e = Ut.shift();
			e && e(),
			setTimeout(Xt, 0)
		},
		Vt = function() {
			zt || Xt()
		},
		$t = function(e, t) {
			g = Math.round(e * b),
			y = Math.round(t * b),
			k.prop("width", g).prop("height", y),
			h.prop("width", g).prop("height", y).css({
				width: e,
				height: t
			}),
			q = d.createImageData(g, y),
			U = q.data.length / 4,
			n && (R = new Int32Array(q.data.buffer))
		},
		Jt = function(t) {
			if (t.data.buffer) return new Int32Array(t.data.buffer);
			var n = t.data,
			r = n.length / 4,
			s = e ? new Int32Array(r) : new Array(r);
			for (i = 0; i < r; i++) s[i] = n[4 * i + 3] << 24 | n[4 * i + 2] << 16 | n[4 * i + 1] << 8 | n[4 * i];
			return s
		},
		Kt = function() {
			if (!nt.length) return;
			for (var e = nt.length; e--;) nt[e].i = e;
			it = nt[0].time,
			st = nt[nt.length - 1].time,
			at = st - it
		},
		Qt = function() {
			nt.sort(function(e, t) {
				return e.time - t.time
			}),
			Kt()
		},
		Gt = function(e) {
			
			if (!e){
				return
			}
			var t = "http://darkskysatellite.s3.amazonaws.com/" + et.sid + "/" + e + ".png",
			n = {
				time: e,
				loaded: !1,
				src: t,
				velocity: [0, 0],
				dt: null,
				end_x: 0,
				end_y: 0
			};
			return nt.push(n),
			on.push(n),
			n
		},
		Yt = function(e) {
			for (var t = nt.length; t--;) if (nt[t].time == e.time) {
				nt.splice(t, 1);
				break
			}
			var n = rt.indexOf(e.time);
			n >= 0 && rt.splice(n, 1),
			Kt(),
			Zt()
		},
		Zt = function(e) {
			var t = Time.now(),
			n = t - t % J,
			r = n,
			e,
			i = [],
			s = [];
			for (var o = nt.length; o--;) {
				e = nt[o];
				if (e.time >= r) e.loaded ? i.push(e.time) : i = [];
				else {
					if (!e.loaded) break;
					s.push(e.time)
				}
			}
			rt = s.concat(i),
			rt.sort(),
			ot = rt[0],
			ut = rt[rt.length - 1],
			Tn = Sn * nt.length,
			_t(),
			Mt(),
			Pt()
		},
		en = function(t, n) {
			L.clearRect(0, 0, 64, 1),
			L.drawImage(t.img, 0, 0, 64, 1, 0, 0, 64, 1);
			var r = L.getImageData(0, 0, 64, 1).data,
			s = e ? new Int32Array([0, 0]) : new Array([0, 0]);
			for (i = 0; i < 32; i++) r[i * 4] & 1 ? s[0] |= 1 << i: s[0] &= ~ (1 << i),
			r[(i + 32) * 4] & 1 ? s[1] |= 1 << i: s[1] &= ~ (1 << i);
			r = null,
			t.velocity[0] = s[0] / 1e6,
			t.velocity[1] = s[1] / 1e6,
			n()
		},
		tn = function(e, t, n) {
			e.is_finishing_loading = !0,
			t ? (e.end_x = J * t.velocity[0], e.end_y = J * t.velocity[1]) : e.end_x = e.end_y = 0;
			var r = -x;
			L.clearRect(0, 0, g, y),
			L.drawImage(e.img, r + b * w, b * velocity_offset_y, y, y),
			t && L.drawImage(t.img, r + b * (w - J * t.velocity[0]), b * (velocity_offset_y - J * t.velocity[1]), y, y);
			var i = Jt(L.getImageData(0, 0, g, y));
			L.drawImage(e.img, r + b * w, b * velocity_offset_y, y, y),
			e.pixels = Jt(L.getImageData(0, 0, g, y));
			for (var s = U; s--;) e.pixels[s] = e.pixels[s] & 255 | i[s] << 8 & 65280;
			return e.loaded = !0,
			Zt(e),
			i = null,
			e.used_as_first_img = !0,
			e.used_as_second_img && (e.img = null),
			t && (t.used_as_second_img = !0, t.used_as_first_img && (t.img = null)),
			typeof n == "function" ? n(null) : null
		},
		nn = function() {
			var e = nt.length,
			t;
			for (var n = 0; n < e; n++) {
				if (nt[n].loaded || nt[n].is_finishing_loading) continue;
				t = n == e - 1;
				if (nt[n].img_loaded && (t || nt[n + 1].img_loaded)) return tn(nt[n], t ? null: nt[n + 1], nn)
			}
		},
		rn = function(e, n) {
			e.img = new Image,
			e.img.crossOrigin = "anonymous",
			e.img.onerror = function() {
				return Yt(e),
				typeof n == "function" ? n(null) : null
			},
			e.img.onload = function() {
				en(e,
				function() {
					an[0] += e.velocity[0],
					an[1] += e.velocity[1],
					an[2]++,
					!an.finished && an[2] >= (G ? 5 : 2) && (an[0] /= an[2], an[1] /= an[2], an.finished = !0, w = 1.15 * Math.abs(Math.ceil(J * an[0])), velocity_offset_y = 1.15 * Math.abs(Math.ceil(J * an[1])), $t(v + 2 * w, m + 2 * velocity_offset_y)),
					e.img_loaded = !0,
					an.finished && nn(),
					typeof n == "function" && n()
				})
			};
			var r = "";
			Time.now() - e.time > 1200 ? 
				r = e.time: r = Time.now();
			
			/*
			t ? 
				e.img.src = e.src + "?" + r : 
				Base64Ajax(e.src + "?" + r,
					function(t) {
						e.img.src = "data:image/png;base64," + t
					}
				);
			*/
			e.img.src = e.src + "?" + r;
		},
		sn = function(e, n) {
			return rn(e,n);
			var r = new Image;
			r.crossOrigin = "anonymous",
			r.onerror = function() {
				return Yt(e),
				typeof n == "function" ? n(null) : null
			},
			r.onload = function() {
				var t = f.is_old_ie ? 100 : 0;
				setTimeout(function() {
					Wt(function() {
						return L.clearRect(0, 0, g, y),
						z == 3 ? L.drawImage(r, 0, 0, N, C, 0, b * x, g, g) : L.drawImage(r, 0, 0, N, C, -b * x, 0, y, y),
						e.pixels = Jt(L.getImageData(0, 0, g, y)),
						e.loaded = !0,
						Zt(e),
						typeof n == "function" ? n(null) : null
					})
				},
				t)
			};
			var i = "";
			Time.now() - e.time > 21600 ? i = e.time: i = Time.now(),
			t ? r.src = e.src + "?" + i: Base64Ajax(e.src + "?" + i,
			function(e) {
				
				r.src = "data:image/png;base64," + e;
			})
		},
		on = [],
		un = function() {
			if (on.length == 0) {
				Zn(!0),
				H.hide(),
				!jt && !dn && Pt(),
				G && Wn && (!jt && !Ft && f.start_animation(), Wn = !1);
				return
			}
			rt.length > 0 && Zn();
			var e = on.shift();
			return z == 0 ? rn(e, un) : sn(e, un)
		},
		an = [0, 0, 0],
		fn = function() {
			_t(!0);
			var e = Time.now(),
			t = e - e % J,
			n = [],
			r = [];
			for (var i = 0; i < X; i++) {
				var s = t + i * J;
				if (s - Time.now() > 3600 * V) break;
				n.push(t + i * J)
			}
			for (var i = 1; i <= W; i++) {
				r.push(t - i * J);
			}
			while (n.length > 0 || r.length > 0){
				Gt(n.shift());
			}
			Gt(r.shift());
			Qt();
			an = [0, 0, 0];
			z != 0 && $t(v, m);
			for (var i = 0; i < 4; i++) {
				un()
			}
		},
		ln = function() {
			var e = Time.now(),
			t = e - e % J,
			n = t + J;
			Gt(t),
			Gt(n),
			Qt(),
			z != 0 && $t(v, m),
			un(),
			un()
		},
		cn = 0,
		hn = null,
		pn = 0,
		dn = !1,
		vn = 0,
		mn,
		gn,
		yn = !1,
		bn = 0,
		wn = 0,
		En = Date.now(),
		Sn,
		xn,
		Tn,
		Nn = function(e, t, n) {
			var r = 0,
			i = [61494528, 111826176, 179463680, 246831890, 314073870, 397501206, 481715218, 582248726, 666331155, 767257366, 867789076, 968321814, 1069181204, 1186556181, 1287154452, 1404594965, 1522232086, 1639607061, 1757047574, 1874488086, 1975085589, 2092526102, -2084934891, -1967494378, -1850053866, -1732613355, -1615172842, -1514444267, -1413846250, -1313248747, -1212519658, -1111856362, -1011127530, -927306986, -843421162, -759469547, -675648746, -608539882, -541431018, -491099370, -440833514, -423990504, -424056037, -424056035, -424121568, -424121565, -424252634, -424252630, -424252626, -424252621, -424252618, -424318150, -424383682, -424383678, -424449210, -424449204, -424514736, -424514731, -424580262, -424645792, -424645788, -424711318, -424776849, -424776844, -424907911, -424907905, -424973437, -424973430, -425038961, -425104492, -425170023, -425235553, -425301084, -425366615, -425366610, -425432141, -425563208, -425563203, -425628734, -425759802, -425825332, -425890865, -425956396, -426021928, -426087461, -426152993, -426284061, -426349594, -426480663, -426546195, -426611729, -426742798, -426808077, -426938890, -427069448, -427134982, -427330820, -427461377, -427591937, -427788033, -427918849, -428114689, -428244993, -428441089, -428637185, -428898561, -429028865, -429290241, -429486081, -429681921, -429877761, -430073345, -430334977, -430530817, -430726657, -430922497, -431118337, -431379713, -431575809, -431771393, -431966977, -432228609, -432358657, -432554497, -432684801, -432815105, -433010945, -433206785, -433337089, -433467393, -433597697, -433728001, -433793025, -433923329, -433988353, -434053121, -434052609, -434052097, -434051585, -434050817, -434050561, -434050049, -434049537, -434049281, -433983233, -433917441, -433785857, -433654785, -433457665, -433260801, -433063937, -432801537, -432604673, -432342273, -432080129, -431752193, -431424257, -431162113, -430899713, -430440961, -430113281, -429785089, -429391873, -428998657, -428605441, -428277761, -427884545, -427556865, -427098113, -426639361, -426246145, -425852929, -425525249, -425066497, -424738817, -424345601, -423952385, -423559169, -423165953, -422772737, -422510593, -422182913, -421855233, -421527553, -421199873, -420937729, -420675585, -420413441, -420216833, -419954689, -419758081, -419627009, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419759361, -420022529, -420285697, -420548865, -420943617, -421272577, -421667329, -422062081, -422522625, -422917377, -423377921, -423838465, -424299009, -424891137, -425285889, -425812225, -426338561, -426930689, -427391233, -427851777, -428443905, -428904705, -429430785, -429957121, -430483457, -431009793, -431470337, -431930881, -432391425, -432851969, -433312513, -433707265, -434102017, -434496769, -434957313, -435220481, -435483649, -435812609];
			for (var s = U; s--;) r = t * (n[s] & 255) + e * (n[s] >> 8),
			R[s] = i[r | 0]
		},
		Cn = function() {
			var e = nt[(hn - it) / J | 0];
			if (!e || !e.loaded) return ! 1;
			var t = e.pixels,
			n = (hn - e.time) / J,
			r = 1 - n;
			return Nn(n, r, t),
			d.putImageData(q, 0, 0),
			s ? p.style["-webkit-transform"] = "translate3d(" + (e.end_x * n - w) + "px, " + (e.end_y * n - velocity_offset_y) + "px, 0)": o ? p.style["-ms-transform"] = "translate(" + (e.end_x * n - w) + "px, " + (e.end_y * n - velocity_offset_y) + "px)": p.style.transform = "translate(" + (e.end_x * n - w) + "px, " + (e.end_y * n - velocity_offset_y) + "px)",
			Dt(),
			!0
		},
		kn = function(e, t, n, r) {
			var i = 0,
			s = 0,
			o = 0,
			u = [61494528, 111826176, 179463680, 246831890, 314073870, 397501206, 481715218, 582248726, 666331155, 767257366, 867789076, 968321814, 1069181204, 1186556181, 1287154452, 1404594965, 1522232086, 1639607061, 1757047574, 1874488086, 1975085589, 2092526102, -2084934891, -1967494378, -1850053866, -1732613355, -1615172842, -1514444267, -1413846250, -1313248747, -1212519658, -1111856362, -1011127530, -927306986, -843421162, -759469547, -675648746, -608539882, -541431018, -491099370, -440833514, -423990504, -424056037, -424056035, -424121568, -424121565, -424252634, -424252630, -424252626, -424252621, -424252618, -424318150, -424383682, -424383678, -424449210, -424449204, -424514736, -424514731, -424580262, -424645792, -424645788, -424711318, -424776849, -424776844, -424907911, -424907905, -424973437, -424973430, -425038961, -425104492, -425170023, -425235553, -425301084, -425366615, -425366610, -425432141, -425563208, -425563203, -425628734, -425759802, -425825332, -425890865, -425956396, -426021928, -426087461, -426152993, -426284061, -426349594, -426480663, -426546195, -426611729, -426742798, -426808077, -426938890, -427069448, -427134982, -427330820, -427461377, -427591937, -427788033, -427918849, -428114689, -428244993, -428441089, -428637185, -428898561, -429028865, -429290241, -429486081, -429681921, -429877761, -430073345, -430334977, -430530817, -430726657, -430922497, -431118337, -431379713, -431575809, -431771393, -431966977, -432228609, -432358657, -432554497, -432684801, -432815105, -433010945, -433206785, -433337089, -433467393, -433597697, -433728001, -433793025, -433923329, -433988353, -434053121, -434052609, -434052097, -434051585, -434050817, -434050561, -434050049, -434049537, -434049281, -433983233, -433917441, -433785857, -433654785, -433457665, -433260801, -433063937, -432801537, -432604673, -432342273, -432080129, -431752193, -431424257, -431162113, -430899713, -430440961, -430113281, -429785089, -429391873, -428998657, -428605441, -428277761, -427884545, -427556865, -427098113, -426639361, -426246145, -425852929, -425525249, -425066497, -424738817, -424345601, -423952385, -423559169, -423165953, -422772737, -422510593, -422182913, -421855233, -421527553, -421199873, -420937729, -420675585, -420413441, -420216833, -419954689, -419758081, -419627009, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419430401, -419759361, -420022529, -420285697, -420548865, -420943617, -421272577, -421667329, -422062081, -422522625, -422917377, -423377921, -423838465, -424299009, -424891137, -425285889, -425812225, -426338561, -426930689, -427391233, -427851777, -428443905, -428904705, -429430785, -429957121, -430483457, -431009793, -431470337, -431930881, -432391425, -432851969, -433312513, -433707265, -434102017, -434496769, -434957313, -435220481, -435483649, -435812609];
			for (var a = U; a--;) i = t * (n[a] & 255) + e * (n[a] >> 8),
			o = u[i | 0],
			s = 4 * a,
			r[s + 3] = o >>> 24,
			r[s + 2] = o >> 16 & 255,
			r[s + 1] = o >> 8 & 255,
			r[s] = o & 255
		},
		Ln = function(e, t, n, r) {
			var i = 0,
			s = 0,
			o = 0,
			u = [3, 2, 1, 0, 6, 4, 2, 0, 10, 7, 4, 0, 14, 10, 5, 1, 18, 13, 7, 1, 23, 16, 9, 2, 28, 20, 11, 2, 34, 24, 14, 3, 39, 28, 16, 3, 45, 33, 19, 4, 51, 37, 21, 4, 57, 41, 24, 5, 63, 46, 26, 5, 70, 51, 29, 6, 76, 55, 32, 6, 83, 60, 35, 7, 90, 66, 38, 8, 97, 71, 41, 8, 104, 76, 44, 9, 111, 81, 47, 10, 117, 85, 49, 10, 124, 90, 52, 11, 131, 96, 55, 11, 138, 101, 58, 12, 145, 106, 61, 13, 152, 111, 64, 13, 159, 116, 67, 14, 165, 121, 69, 14, 171, 125, 72, 15, 177, 128, 74, 15, 183, 133, 77, 16, 189, 138, 79, 16, 195, 143, 82, 17, 200, 146, 84, 17, 205, 150, 85, 18, 210, 154, 87, 17, 215, 157, 90, 19, 219, 160, 92, 19, 223, 163, 94, 19, 226, 165, 95, 19, 229, 166, 95, 20, 230, 168, 97, 22, 230, 167, 97, 24, 230, 167, 97, 26, 230, 166, 97, 29, 230, 166, 97, 32, 230, 164, 97, 34, 230, 164, 97, 38, 230, 164, 97, 41, 230, 164, 97, 46, 230, 164, 97, 49, 230, 163, 97, 52, 230, 162, 97, 56, 230, 162, 97, 60, 230, 161, 97, 63, 230, 161, 97, 69, 230, 161, 97, 72, 230, 161, 97, 77, 230, 160, 97, 81, 230, 159, 97, 87, 230, 159, 97, 90, 230, 158, 97, 96, 230, 157, 97, 100, 230, 157, 97, 105, 230, 155, 97, 109, 230, 155, 97, 115, 230, 154, 97, 118, 230, 154, 97, 124, 230, 153, 97, 129, 230, 152, 97, 133, 230, 152, 97, 138, 230, 151, 97, 143, 230, 150, 97, 148, 230, 149, 97, 152, 230, 149, 97, 157, 230, 148, 97, 161, 230, 146, 97, 166, 230, 146, 97, 170, 230, 145, 97, 175, 230, 143, 97, 179, 230, 143, 97, 184, 230, 142, 97, 187, 230, 141, 97, 191, 230, 140, 97, 195, 230, 139, 97, 198, 230, 138, 97, 201, 230, 136, 97, 205, 230, 135, 97, 207, 230, 133, 97, 210, 230, 133, 97, 214, 230, 132, 97, 216, 230, 130, 97, 218, 230, 129, 97, 219, 230, 127, 98, 222, 230, 125, 100, 224, 230, 124, 100, 225, 230, 122, 103, 227, 230, 120, 105, 230, 230, 118, 106, 230, 230, 115, 108, 230, 230, 114, 109, 230, 230, 111, 112, 230, 230, 109, 115, 230, 230, 106, 116, 230, 230, 104, 118, 230, 230, 100, 121, 230, 230, 98, 124, 230, 230, 95, 126, 230, 230, 92, 129, 230, 230, 89, 132, 230, 230, 87, 134, 230, 230, 84, 138, 230, 230, 80, 140, 230, 230, 78, 143, 230, 230, 75, 145, 230, 230, 72, 148, 230, 230, 69, 151, 230, 230, 66, 153, 230, 230, 63, 155, 230, 230, 60, 159, 230, 230, 58, 162, 230, 230, 54, 164, 230, 230, 52, 168, 230, 230, 50, 170, 230, 230, 48, 173, 230, 230, 46, 176, 230, 230, 43, 179, 230, 230, 41, 181, 230, 230, 39, 184, 230, 230, 37, 187, 230, 230, 35, 189, 230, 230, 33, 192, 230, 230, 32, 194, 230, 230, 31, 197, 230, 230, 30, 198, 230, 230, 29, 201, 230, 230, 29, 203, 230, 230, 29, 205, 230, 230, 29, 207, 230, 230, 29, 209, 230, 230, 29, 210, 230, 230, 29, 212, 230, 230, 29, 214, 230, 230, 29, 215, 230, 230, 30, 216, 230, 230, 31, 217, 230, 230, 32, 219, 230, 230, 34, 219, 230, 230, 37, 221, 230, 230, 40, 222, 230, 230, 42, 223, 230, 230, 46, 224, 230, 230, 49, 225, 230, 230, 52, 225, 230, 230, 56, 225, 230, 230, 60, 226, 230, 230, 65, 227, 230, 230, 69, 227, 230, 230, 72, 228, 230, 230, 78, 228, 230, 230, 83, 228, 230, 230, 87, 230, 230, 230, 93, 230, 230, 230, 98, 230, 230, 230, 104, 230, 230, 230, 108, 230, 230, 230, 114, 230, 230, 230, 118, 230, 230, 230, 124, 230, 230, 230, 131, 230, 230, 230, 136, 230, 230, 230, 142, 230, 230, 230, 146, 230, 230, 230, 152, 230, 230, 230, 157, 230, 230, 230, 162, 230, 230, 230, 168, 230, 230, 230, 173, 230, 230, 230, 179, 230, 230, 230, 184, 230, 230, 230, 188, 230, 230, 230, 192, 230, 230, 230, 197, 230, 230, 230, 201, 230, 230, 230, 206, 230, 230, 230, 209, 230, 230, 230, 213, 230, 230, 230, 216, 230, 230, 230, 219, 230, 230, 230, 223, 230, 230, 230, 225, 230, 230, 230, 227, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 225, 225, 230, 230, 222, 222, 230, 230, 218, 218, 230, 230, 215, 215, 230, 230, 209, 209, 230, 230, 205, 205, 230, 230, 199, 199, 230, 230, 194, 194, 230, 230, 188, 188, 230, 230, 182, 182, 230, 230, 176, 176, 230, 230, 170, 170, 230, 230, 163, 163, 230, 230, 155, 155, 230, 230, 150, 150, 230, 230, 143, 143, 230, 230, 135, 135, 230, 230, 127, 127, 230, 230, 121, 121, 230, 230, 115, 115, 230, 230, 106, 106, 230, 230, 100, 99, 230, 230, 93, 93, 230, 230, 86, 86, 230, 230, 78, 78, 230, 230, 71, 71, 230, 230, 65, 65, 230, 230, 59, 59, 230, 230, 52, 52, 230, 230, 46, 46, 230, 230, 40, 40, 230, 230, 34, 34, 230, 230, 29, 29, 230, 230, 23, 23, 230, 230, 17, 17, 230, 230, 14, 14, 230, 230, 10, 10, 230, 230, 5, 5, 230];
			for (var a = U; a--;) i = t * (n[a] & 255) + e * (n[a] >> 8),
			o = 4 * (i | 0),
			s = 4 * a,
			r[s + 3] = u[o],
			r[s + 2] = u[o + 1],
			r[s + 1] = u[o + 2],
			r[s] = u[o + 3]
		},
		An = function() {
			var e = nt[(hn - it) / J | 0];
			if (!e || !e.loaded) return ! 1;
			var t = e.pixels,
			n = (hn - e.time) / J,
			i = 1 - n;
			return ENV.is_android ? Ln(n, i, t, q.data) : kn(n, i, t, q.data),
			d.putImageData(q, 0, 0),
			s ? p.style["-webkit-transform"] = "translate3d(" + (e.end_x * n - w) + "px, " + (e.end_y * n - velocity_offset_y) + "px, 0)": o ? h.css("-ms-transform", "translate(" + (e.end_x * n - w) + "px, " + (e.end_y * n - velocity_offset_y) + "px)") : r ? h.css("-moz-transform", "translate(" + (e.end_x * n - w) + "px, " + (e.end_y * n - velocity_offset_y) + "px)") : p.style.transform = "translate(" + (e.end_x * n - w) + "px, " + (e.end_y * n - velocity_offset_y) + "px)",
			Dt(),
			!0
		},
		On = function(e, t, n, r, i, s, o, u, a, f, l, c) {
			var h = 0,
			p = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 75448064, 162157824, 245586688, 347232512, 447764480, 565271552, 682776832, 817125888, 951147264, 1085496064, 1219779584, 1354062848, 1504992e3, 1639275520, 1773362176, 1924488448, 2058705664, -2102109184, -1967825920, -1850385152, -1732944640, -1632346880, -1531618048, -1447731968, -1363845888, -1296737024, -1280025598, -1280091129, -1280156660, -1280287983, -1280288490, -1280354021, -1280485344, -1280485849, -1280551379, -1280682956, -1280683461, -1280814526, -1280945846, -1280946350, -1281143207, -1281143710, -1281340566, -1281340815, -1281472390, -1281603455, -1281668984, -1281800047, -1281865575, -1282062176, -1282127703, -1282258768, -1282455369, -1282455362, -1282586426, -1282717491, -1282914094, -1282979623, -1283110689, -1283372827, -1283438359, -1283569425, -1283766029, -1283831561, -1284028166, -1284224001, -1284289281, -1284419585, -1284680961, -1284745985, -1284942081, -1285137921, -1285333761, -1285529345, -1285790721, -1285986305, -1286247169, -1286443009, -1286704129, -1286899713, -1287160833, -1287487233, -1287748097, -1287943937, -1288139009, -1288400129, -1288660993, -1288856577, -1289117441, -1289312769, -1289573889, -1289769473, -1290030081, -1290225665, -1290420993, -1290616577, -1290812161, -1291007745, -1291203073, -1291267329, -1291463169, -1291527681, -1291657473, -1291787777, -1291786753, -1291785729, -1291784961, -1291784193, -1291783425, -1291782657, -1291782145, -1291781377, -1291780865, -1291780097, -1291780097, -1291649025, -1291649025, -1291452417, -1291321345, -1291190273, -1290993665, -1290797057, -1290600449, -1290403841, -1290207233, -1289945089, -1289748481, -1289486337, -1289224193, -1289027585, -1288699905, -1288437761, -1288110081, -1287913473, -1287585793, -1287258113, -1286930433, -1286602753, -1286275073, -1285947393, -1285619713, -1285292033, -1285029889, -1284636673, -1284374529, -1283981313, -1283588097, -1283325953, -1282867201, -1282539521, -1282211841, -1281884161, -1281556481, -1281294337, -1280901121, -1280507905, -1280245761, -1279852545, -1279590401, -1279328257, -1278935041, -1278672897, -1278345217, -1278083073, -1277820929, -1277558785, -1277231105, -1277034497, -1276772353, -1276510209, -1276313601, -1276116993, -1275920385, -1275723777, -1275592705, -1275396097, -1275199489, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275397377, -1275660545, -1275923713, -1276252673, -1276581633, -1276910593, -1277371137, -1277700097, -1278226433, -1278555393, -1279015937, -1279476481, -1280002817, -1280463361, -1280923905, -1281450241, -1282042369, -1282502913, -1283095041, -1283555585, -1284081921, -1284542977, -1285068801, -1285595137, -1286187265, -1286647809, -1287108353, -1287568897, -1288029441, -1288489985, -1288950529, -1289345281, -1289740033, -1290200577, -1290595329, -1290858497, -1291121665, -1291516417];
			for (var d = U; d--;) h = t * (e[d] >> n & 255) + u * (o[d] >> a & 255) + i * (r[d] >> s & 255) + l * (f[d] >> c & 255),
			R[d] = p[h | 0]
		},
		Mn = function() {
			var e = (hn - it) / xn,
			t = Tn - 1,
			n = Math.max(0, e | 0),
			r = n / Sn | 0,
			i = n % Sn,
			s = i * 8,
			o = Math.min(n + 1, t),
			u = o / Sn | 0,
			a = o % Sn,
			f = a * 8,
			l = Math.max(0, n - 1),
			c = l / Sn | 0,
			h = l % Sn,
			p = h * 8,
			v = Math.min(n + 2, t),
			m = v / Sn | 0,
			g = v % Sn,
			y = g * 8,
			b = (nt[r] || {}).pixels,
			w = (nt[u] || {}).pixels,
			E = (nt[c] || {}).pixels,
			S = (nt[m] || {}).pixels;
			if (!b || !w || !E || !S) return ! 1;
			var x = Math.max(0, e - n),
			T = .25 + .25 * (1 - x),
			N = .25 + .25 * x,
			C = .25 * (1 - x),
			k = .25 * x;
			return On(b, T, s, E, C, p, w, N, f, S, k, y),
			d.putImageData(q, 0, 0),
			Dt(),
			!0
		},
		_n = function(e, t, n, r, i, s, o, u, a, f, l, c, h) {
			var p = 0,
			d = 0,
			v = 0,
			m = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 75448064, 162157824, 245586688, 347232512, 447764480, 565271552, 682776832, 817125888, 951147264, 1085496064, 1219779584, 1354062848, 1504992e3, 1639275520, 1773362176, 1924488448, 2058705664, -2102109184, -1967825920, -1850385152, -1732944640, -1632346880, -1531618048, -1447731968, -1363845888, -1296737024, -1280025598, -1280091129, -1280156660, -1280287983, -1280288490, -1280354021, -1280485344, -1280485849, -1280551379, -1280682956, -1280683461, -1280814526, -1280945846, -1280946350, -1281143207, -1281143710, -1281340566, -1281340815, -1281472390, -1281603455, -1281668984, -1281800047, -1281865575, -1282062176, -1282127703, -1282258768, -1282455369, -1282455362, -1282586426, -1282717491, -1282914094, -1282979623, -1283110689, -1283372827, -1283438359, -1283569425, -1283766029, -1283831561, -1284028166, -1284224001, -1284289281, -1284419585, -1284680961, -1284745985, -1284942081, -1285137921, -1285333761, -1285529345, -1285790721, -1285986305, -1286247169, -1286443009, -1286704129, -1286899713, -1287160833, -1287487233, -1287748097, -1287943937, -1288139009, -1288400129, -1288660993, -1288856577, -1289117441, -1289312769, -1289573889, -1289769473, -1290030081, -1290225665, -1290420993, -1290616577, -1290812161, -1291007745, -1291203073, -1291267329, -1291463169, -1291527681, -1291657473, -1291787777, -1291786753, -1291785729, -1291784961, -1291784193, -1291783425, -1291782657, -1291782145, -1291781377, -1291780865, -1291780097, -1291780097, -1291649025, -1291649025, -1291452417, -1291321345, -1291190273, -1290993665, -1290797057, -1290600449, -1290403841, -1290207233, -1289945089, -1289748481, -1289486337, -1289224193, -1289027585, -1288699905, -1288437761, -1288110081, -1287913473, -1287585793, -1287258113, -1286930433, -1286602753, -1286275073, -1285947393, -1285619713, -1285292033, -1285029889, -1284636673, -1284374529, -1283981313, -1283588097, -1283325953, -1282867201, -1282539521, -1282211841, -1281884161, -1281556481, -1281294337, -1280901121, -1280507905, -1280245761, -1279852545, -1279590401, -1279328257, -1278935041, -1278672897, -1278345217, -1278083073, -1277820929, -1277558785, -1277231105, -1277034497, -1276772353, -1276510209, -1276313601, -1276116993, -1275920385, -1275723777, -1275592705, -1275396097, -1275199489, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275397377, -1275660545, -1275923713, -1276252673, -1276581633, -1276910593, -1277371137, -1277700097, -1278226433, -1278555393, -1279015937, -1279476481, -1280002817, -1280463361, -1280923905, -1281450241, -1282042369, -1282502913, -1283095041, -1283555585, -1284081921, -1284542977, -1285068801, -1285595137, -1286187265, -1286647809, -1287108353, -1287568897, -1288029441, -1288489985, -1288950529, -1289345281, -1289740033, -1290200577, -1290595329, -1290858497, -1291121665, -1291516417];
			for (var g = U; g--;) p = t * (e[g] >> n & 255) + u * (o[g] >> a & 255) + i * (r[g] >> s & 255) + l * (f[g] >> c & 255),
			v = m[p | 0],
			d = 4 * g,
			h[d + 3] = v >>> 24,
			h[d + 2] = v >> 16 & 255,
			h[d + 1] = v >> 8 & 255,
			h[d] = v & 255
		},
		Dn = function(e, t, n, r, i, s, o, u, a, f, l, c, h) {
			var p = 0,
			d = 0,
			v = 0,
			m = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 2, 1, 0, 9, 6, 3, 0, 14, 9, 5, 0, 20, 14, 7, 0, 26, 18, 9, 0, 33, 23, 12, 0, 40, 28, 14, 0, 48, 34, 17, 0, 56, 39, 20, 0, 64, 45, 23, 0, 72, 51, 26, 0, 80, 57, 29, 0, 89, 63, 32, 0, 97, 69, 35, 0, 105, 74, 38, 0, 114, 81, 42, 0, 122, 87, 44, 0, 130, 92, 47, 0, 138, 98, 50, 0, 145, 103, 53, 0, 152, 108, 55, 0, 158, 112, 58, 0, 164, 116, 60, 0, 169, 120, 62, 0, 174, 124, 63, 0, 178, 126, 65, 0, 179, 126, 65, 1, 179, 126, 65, 5, 179, 125, 65, 8, 179, 124, 64, 12, 179, 124, 62, 15, 179, 123, 62, 19, 179, 121, 62, 22, 179, 121, 60, 27, 179, 121, 60, 32, 179, 119, 59, 37, 179, 119, 58, 41, 179, 118, 58, 46, 179, 117, 57, 52, 179, 117, 55, 58, 179, 114, 55, 62, 179, 114, 53, 69, 179, 112, 53, 74, 179, 112, 52, 79, 179, 111, 51, 86, 179, 110, 51, 91, 179, 109, 51, 95, 179, 107, 51, 102, 179, 107, 51, 107, 179, 105, 51, 112, 179, 104, 51, 119, 179, 102, 51, 124, 179, 100, 51, 128, 179, 100, 51, 133, 179, 99, 51, 139, 179, 98, 51, 144, 179, 95, 51, 147, 179, 95, 51, 152, 179, 93, 51, 157, 179, 91, 51, 161, 179, 90, 51, 164, 179, 88, 51, 168, 179, 86, 51, 171, 179, 86, 51, 173, 179, 84, 51, 175, 179, 81, 53, 179, 179, 81, 53, 179, 179, 79, 55, 179, 179, 77, 58, 179, 179, 76, 59, 179, 179, 74, 60, 179, 179, 72, 62, 179, 179, 69, 65, 179, 179, 67, 67, 179, 179, 65, 69, 179, 179, 62, 72, 179, 179, 60, 76, 179, 179, 58, 78, 179, 179, 55, 81, 179, 179, 53, 84, 179, 179, 50, 86, 179, 179, 46, 90, 179, 179, 44, 93, 179, 179, 41, 95, 179, 179, 39, 100, 179, 179, 37, 102, 179, 179, 34, 106, 179, 179, 32, 109, 179, 179, 29, 112, 179, 179, 27, 116, 179, 179, 24, 119, 179, 179, 22, 121, 179, 179, 19, 126, 179, 179, 17, 128, 179, 179, 15, 132, 179, 179, 13, 135, 179, 179, 11, 138, 179, 179, 8, 140, 179, 179, 6, 144, 179, 179, 6, 147, 179, 179, 4, 150, 179, 179, 3, 152, 179, 179, 1, 156, 179, 179, 0, 158, 179, 179, 0, 161, 179, 179, 0, 164, 179, 179, 0, 166, 179, 179, 0, 168, 179, 179, 0, 170, 179, 179, 0, 172, 179, 179, 0, 173, 179, 179, 0, 175, 179, 179, 0, 177, 179, 179, 0, 179, 179, 179, 0, 179, 179, 179, 1, 179, 179, 179, 1, 179, 179, 179, 4, 179, 179, 179, 5, 179, 179, 179, 6, 179, 179, 179, 8, 179, 179, 179, 11, 179, 179, 179, 13, 179, 179, 179, 15, 179, 179, 179, 17, 179, 179, 179, 20, 179, 179, 179, 22, 179, 179, 179, 25, 179, 179, 179, 27, 179, 179, 179, 29, 179, 179, 179, 33, 179, 179, 179, 36, 179, 179, 179, 39, 179, 179, 179, 41, 179, 179, 179, 45, 179, 179, 179, 48, 179, 179, 179, 52, 179, 179, 179, 55, 179, 179, 179, 59, 179, 179, 179, 62, 179, 179, 179, 66, 179, 179, 179, 69, 179, 179, 179, 72, 179, 179, 179, 77, 179, 179, 179, 79, 179, 179, 179, 84, 179, 179, 179, 88, 179, 179, 179, 91, 179, 179, 179, 95, 179, 179, 179, 99, 179, 179, 179, 102, 179, 179, 179, 106, 179, 179, 179, 110, 179, 179, 179, 112, 179, 179, 179, 117, 179, 179, 179, 121, 179, 179, 179, 124, 179, 179, 179, 128, 179, 179, 179, 131, 179, 179, 179, 133, 179, 179, 179, 138, 179, 179, 179, 140, 179, 179, 179, 144, 179, 179, 179, 147, 179, 179, 179, 150, 179, 179, 179, 152, 179, 179, 179, 156, 179, 179, 179, 158, 179, 179, 179, 161, 179, 179, 179, 164, 179, 179, 179, 166, 179, 179, 179, 168, 179, 179, 179, 170, 179, 179, 179, 172, 179, 179, 179, 173, 179, 179, 179, 175, 179, 179, 179, 178, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 175, 175, 179, 179, 173, 173, 179, 179, 170, 170, 179, 179, 166, 166, 179, 179, 163, 163, 179, 179, 159, 159, 179, 179, 154, 154, 179, 179, 151, 151, 179, 179, 145, 145, 179, 179, 142, 142, 179, 179, 137, 137, 179, 179, 132, 132, 179, 179, 126, 126, 179, 179, 121, 121, 179, 179, 117, 117, 179, 179, 111, 111, 179, 179, 105, 105, 179, 179, 100, 100, 179, 179, 93, 93, 179, 179, 88, 88, 179, 179, 83, 83, 179, 179, 78, 77, 179, 179, 72, 72, 179, 179, 67, 67, 179, 179, 60, 60, 179, 179, 55, 55, 179, 179, 51, 51, 179, 179, 46, 46, 179, 179, 41, 41, 179, 179, 36, 36, 179, 179, 31, 31, 179, 179, 27, 27, 179, 179, 22, 22, 179, 179, 18, 18, 179, 179, 13, 13, 179, 179, 11, 11, 179, 179, 8, 8, 179, 179, 4, 4, 179];
			for (var g = U; g--;) p = t * (e[g] >> n & 255) + u * (o[g] >> a & 255) + i * (r[g] >> s & 255) + l * (f[g] >> c & 255),
			v = 4 * (p | 0),
			d = 4 * g,
			h[d + 3] = m[v],
			h[d + 2] = m[v + 1],
			h[d + 1] = m[v + 2],
			h[d] = m[v + 3]
		},
		Pn = function() {
			var e = (hn - it) / xn,
			t = Tn - 1,
			n = Math.max(0, e | 0),
			r = n / Sn | 0,
			i = n % Sn,
			s = i * 8,
			o = Math.min(n + 1, t),
			u = o / Sn | 0,
			a = o % Sn,
			f = a * 8,
			l = Math.max(0, n - 1),
			c = l / Sn | 0,
			h = l % Sn,
			p = h * 8,
			v = Math.min(n + 2, t),
			m = v / Sn | 0,
			g = v % Sn,
			y = g * 8,
			b = (nt[r] || {}).pixels,
			w = (nt[u] || {}).pixels,
			E = (nt[c] || {}).pixels,
			S = (nt[m] || {}).pixels;
			if (!b || !w || !E || !S) return ! 1;
			var x = Math.max(0, e - n),
			T = .25 + .25 * (1 - x),
			N = .25 + .25 * x,
			C = .25 * (1 - x),
			k = .25 * x;
			return ENV.is_android ? Dn(b, T, s, E, C, p, w, N, f, S, k, y, q.data) : _n(b, T, s, E, C, p, w, N, f, S, k, y, q.data),
			d.putImageData(q, 0, 0),
			Dt(),
			!0
		},
		Hn = function(e, t, n, r, i, s) {
			var o = 0,
			u = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 75448064, 162157824, 245586688, 347232512, 447764480, 565271552, 682776832, 817125888, 951147264, 1085496064, 1219779584, 1354062848, 1504992e3, 1639275520, 1773362176, 1924488448, 2058705664, -2102109184, -1967825920, -1850385152, -1732944640, -1632346880, -1531618048, -1447731968, -1363845888, -1296737024, -1280025598, -1280091129, -1280156660, -1280287983, -1280288490, -1280354021, -1280485344, -1280485849, -1280551379, -1280682956, -1280683461, -1280814526, -1280945846, -1280946350, -1281143207, -1281143710, -1281340566, -1281340815, -1281472390, -1281603455, -1281668984, -1281800047, -1281865575, -1282062176, -1282127703, -1282258768, -1282455369, -1282455362, -1282586426, -1282717491, -1282914094, -1282979623, -1283110689, -1283372827, -1283438359, -1283569425, -1283766029, -1283831561, -1284028166, -1284224001, -1284289281, -1284419585, -1284680961, -1284745985, -1284942081, -1285137921, -1285333761, -1285529345, -1285790721, -1285986305, -1286247169, -1286443009, -1286704129, -1286899713, -1287160833, -1287487233, -1287748097, -1287943937, -1288139009, -1288400129, -1288660993, -1288856577, -1289117441, -1289312769, -1289573889, -1289769473, -1290030081, -1290225665, -1290420993, -1290616577, -1290812161, -1291007745, -1291203073, -1291267329, -1291463169, -1291527681, -1291657473, -1291787777, -1291786753, -1291785729, -1291784961, -1291784193, -1291783425, -1291782657, -1291782145, -1291781377, -1291780865, -1291780097, -1291780097, -1291649025, -1291649025, -1291452417, -1291321345, -1291190273, -1290993665, -1290797057, -1290600449, -1290403841, -1290207233, -1289945089, -1289748481, -1289486337, -1289224193, -1289027585, -1288699905, -1288437761, -1288110081, -1287913473, -1287585793, -1287258113, -1286930433, -1286602753, -1286275073, -1285947393, -1285619713, -1285292033, -1285029889, -1284636673, -1284374529, -1283981313, -1283588097, -1283325953, -1282867201, -1282539521, -1282211841, -1281884161, -1281556481, -1281294337, -1280901121, -1280507905, -1280245761, -1279852545, -1279590401, -1279328257, -1278935041, -1278672897, -1278345217, -1278083073, -1277820929, -1277558785, -1277231105, -1277034497, -1276772353, -1276510209, -1276313601, -1276116993, -1275920385, -1275723777, -1275592705, -1275396097, -1275199489, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275397377, -1275660545, -1275923713, -1276252673, -1276581633, -1276910593, -1277371137, -1277700097, -1278226433, -1278555393, -1279015937, -1279476481, -1280002817, -1280463361, -1280923905, -1281450241, -1282042369, -1282502913, -1283095041, -1283555585, -1284081921, -1284542977, -1285068801, -1285595137, -1286187265, -1286647809, -1287108353, -1287568897, -1288029441, -1288489985, -1288950529, -1289345281, -1289740033, -1290200577, -1290595329, -1290858497, -1291121665, -1291516417];
			for (var a = U; a--;) o = t * (e[a] >> n & 255) + i * (r[a] >> s & 255),
			R[a] = u[o | 0]
		},
		Bn = function() {
			var e = (hn - it) / xn,
			t = Math.max(0, e | 0),
			n = t / Sn | 0,
			r = t % Sn,
			i = r * 8,
			s = Math.min(t + 1, Tn - 1),
			o = s / Sn | 0,
			u = s % Sn,
			a = u * 8,
			f = nt[n].pixels,
			l = nt[o].pixels;
			if (!f || !l) return ! 1;
			var c = Math.max(0, e - t),
			h = 1 - c;
			return Hn(f, h, i, l, c, a),
			d.putImageData(q, 0, 0),
			Dt(),
			!0
		},
		jn = function(e, t, n, r, i, s, o) {
			var u = 0,
			a = 0,
			f = 0,
			l = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 75448064, 162157824, 245586688, 347232512, 447764480, 565271552, 682776832, 817125888, 951147264, 1085496064, 1219779584, 1354062848, 1504992e3, 1639275520, 1773362176, 1924488448, 2058705664, -2102109184, -1967825920, -1850385152, -1732944640, -1632346880, -1531618048, -1447731968, -1363845888, -1296737024, -1280025598, -1280091129, -1280156660, -1280287983, -1280288490, -1280354021, -1280485344, -1280485849, -1280551379, -1280682956, -1280683461, -1280814526, -1280945846, -1280946350, -1281143207, -1281143710, -1281340566, -1281340815, -1281472390, -1281603455, -1281668984, -1281800047, -1281865575, -1282062176, -1282127703, -1282258768, -1282455369, -1282455362, -1282586426, -1282717491, -1282914094, -1282979623, -1283110689, -1283372827, -1283438359, -1283569425, -1283766029, -1283831561, -1284028166, -1284224001, -1284289281, -1284419585, -1284680961, -1284745985, -1284942081, -1285137921, -1285333761, -1285529345, -1285790721, -1285986305, -1286247169, -1286443009, -1286704129, -1286899713, -1287160833, -1287487233, -1287748097, -1287943937, -1288139009, -1288400129, -1288660993, -1288856577, -1289117441, -1289312769, -1289573889, -1289769473, -1290030081, -1290225665, -1290420993, -1290616577, -1290812161, -1291007745, -1291203073, -1291267329, -1291463169, -1291527681, -1291657473, -1291787777, -1291786753, -1291785729, -1291784961, -1291784193, -1291783425, -1291782657, -1291782145, -1291781377, -1291780865, -1291780097, -1291780097, -1291649025, -1291649025, -1291452417, -1291321345, -1291190273, -1290993665, -1290797057, -1290600449, -1290403841, -1290207233, -1289945089, -1289748481, -1289486337, -1289224193, -1289027585, -1288699905, -1288437761, -1288110081, -1287913473, -1287585793, -1287258113, -1286930433, -1286602753, -1286275073, -1285947393, -1285619713, -1285292033, -1285029889, -1284636673, -1284374529, -1283981313, -1283588097, -1283325953, -1282867201, -1282539521, -1282211841, -1281884161, -1281556481, -1281294337, -1280901121, -1280507905, -1280245761, -1279852545, -1279590401, -1279328257, -1278935041, -1278672897, -1278345217, -1278083073, -1277820929, -1277558785, -1277231105, -1277034497, -1276772353, -1276510209, -1276313601, -1276116993, -1275920385, -1275723777, -1275592705, -1275396097, -1275199489, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275068417, -1275397377, -1275660545, -1275923713, -1276252673, -1276581633, -1276910593, -1277371137, -1277700097, -1278226433, -1278555393, -1279015937, -1279476481, -1280002817, -1280463361, -1280923905, -1281450241, -1282042369, -1282502913, -1283095041, -1283555585, -1284081921, -1284542977, -1285068801, -1285595137, -1286187265, -1286647809, -1287108353, -1287568897, -1288029441, -1288489985, -1288950529, -1289345281, -1289740033, -1290200577, -1290595329, -1290858497, -1291121665, -1291516417];
			for (var c = U; c--;) u = t * (e[c] >> n & 255) + i * (r[c] >> s & 255),
			f = l[u | 0],
			a = 4 * c,
			o[a + 3] = f >>> 24,
			o[a + 2] = f >> 16 & 255,
			o[a + 1] = f >> 8 & 255,
			o[a] = f & 255
		},
		Fn = function(e, t, n, r, i, s, o) {
			var u = 0,
			a = 0,
			f = 0,
			l = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 2, 1, 0, 9, 6, 3, 0, 14, 9, 5, 0, 20, 14, 7, 0, 26, 18, 9, 0, 33, 23, 12, 0, 40, 28, 14, 0, 48, 34, 17, 0, 56, 39, 20, 0, 64, 45, 23, 0, 72, 51, 26, 0, 80, 57, 29, 0, 89, 63, 32, 0, 97, 69, 35, 0, 105, 74, 38, 0, 114, 81, 42, 0, 122, 87, 44, 0, 130, 92, 47, 0, 138, 98, 50, 0, 145, 103, 53, 0, 152, 108, 55, 0, 158, 112, 58, 0, 164, 116, 60, 0, 169, 120, 62, 0, 174, 124, 63, 0, 178, 126, 65, 0, 179, 126, 65, 1, 179, 126, 65, 5, 179, 125, 65, 8, 179, 124, 64, 12, 179, 124, 62, 15, 179, 123, 62, 19, 179, 121, 62, 22, 179, 121, 60, 27, 179, 121, 60, 32, 179, 119, 59, 37, 179, 119, 58, 41, 179, 118, 58, 46, 179, 117, 57, 52, 179, 117, 55, 58, 179, 114, 55, 62, 179, 114, 53, 69, 179, 112, 53, 74, 179, 112, 52, 79, 179, 111, 51, 86, 179, 110, 51, 91, 179, 109, 51, 95, 179, 107, 51, 102, 179, 107, 51, 107, 179, 105, 51, 112, 179, 104, 51, 119, 179, 102, 51, 124, 179, 100, 51, 128, 179, 100, 51, 133, 179, 99, 51, 139, 179, 98, 51, 144, 179, 95, 51, 147, 179, 95, 51, 152, 179, 93, 51, 157, 179, 91, 51, 161, 179, 90, 51, 164, 179, 88, 51, 168, 179, 86, 51, 171, 179, 86, 51, 173, 179, 84, 51, 175, 179, 81, 53, 179, 179, 81, 53, 179, 179, 79, 55, 179, 179, 77, 58, 179, 179, 76, 59, 179, 179, 74, 60, 179, 179, 72, 62, 179, 179, 69, 65, 179, 179, 67, 67, 179, 179, 65, 69, 179, 179, 62, 72, 179, 179, 60, 76, 179, 179, 58, 78, 179, 179, 55, 81, 179, 179, 53, 84, 179, 179, 50, 86, 179, 179, 46, 90, 179, 179, 44, 93, 179, 179, 41, 95, 179, 179, 39, 100, 179, 179, 37, 102, 179, 179, 34, 106, 179, 179, 32, 109, 179, 179, 29, 112, 179, 179, 27, 116, 179, 179, 24, 119, 179, 179, 22, 121, 179, 179, 19, 126, 179, 179, 17, 128, 179, 179, 15, 132, 179, 179, 13, 135, 179, 179, 11, 138, 179, 179, 8, 140, 179, 179, 6, 144, 179, 179, 6, 147, 179, 179, 4, 150, 179, 179, 3, 152, 179, 179, 1, 156, 179, 179, 0, 158, 179, 179, 0, 161, 179, 179, 0, 164, 179, 179, 0, 166, 179, 179, 0, 168, 179, 179, 0, 170, 179, 179, 0, 172, 179, 179, 0, 173, 179, 179, 0, 175, 179, 179, 0, 177, 179, 179, 0, 179, 179, 179, 0, 179, 179, 179, 1, 179, 179, 179, 1, 179, 179, 179, 4, 179, 179, 179, 5, 179, 179, 179, 6, 179, 179, 179, 8, 179, 179, 179, 11, 179, 179, 179, 13, 179, 179, 179, 15, 179, 179, 179, 17, 179, 179, 179, 20, 179, 179, 179, 22, 179, 179, 179, 25, 179, 179, 179, 27, 179, 179, 179, 29, 179, 179, 179, 33, 179, 179, 179, 36, 179, 179, 179, 39, 179, 179, 179, 41, 179, 179, 179, 45, 179, 179, 179, 48, 179, 179, 179, 52, 179, 179, 179, 55, 179, 179, 179, 59, 179, 179, 179, 62, 179, 179, 179, 66, 179, 179, 179, 69, 179, 179, 179, 72, 179, 179, 179, 77, 179, 179, 179, 79, 179, 179, 179, 84, 179, 179, 179, 88, 179, 179, 179, 91, 179, 179, 179, 95, 179, 179, 179, 99, 179, 179, 179, 102, 179, 179, 179, 106, 179, 179, 179, 110, 179, 179, 179, 112, 179, 179, 179, 117, 179, 179, 179, 121, 179, 179, 179, 124, 179, 179, 179, 128, 179, 179, 179, 131, 179, 179, 179, 133, 179, 179, 179, 138, 179, 179, 179, 140, 179, 179, 179, 144, 179, 179, 179, 147, 179, 179, 179, 150, 179, 179, 179, 152, 179, 179, 179, 156, 179, 179, 179, 158, 179, 179, 179, 161, 179, 179, 179, 164, 179, 179, 179, 166, 179, 179, 179, 168, 179, 179, 179, 170, 179, 179, 179, 172, 179, 179, 179, 173, 179, 179, 179, 175, 179, 179, 179, 178, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 175, 175, 179, 179, 173, 173, 179, 179, 170, 170, 179, 179, 166, 166, 179, 179, 163, 163, 179, 179, 159, 159, 179, 179, 154, 154, 179, 179, 151, 151, 179, 179, 145, 145, 179, 179, 142, 142, 179, 179, 137, 137, 179, 179, 132, 132, 179, 179, 126, 126, 179, 179, 121, 121, 179, 179, 117, 117, 179, 179, 111, 111, 179, 179, 105, 105, 179, 179, 100, 100, 179, 179, 93, 93, 179, 179, 88, 88, 179, 179, 83, 83, 179, 179, 78, 77, 179, 179, 72, 72, 179, 179, 67, 67, 179, 179, 60, 60, 179, 179, 55, 55, 179, 179, 51, 51, 179, 179, 46, 46, 179, 179, 41, 41, 179, 179, 36, 36, 179, 179, 31, 31, 179, 179, 27, 27, 179, 179, 22, 22, 179, 179, 18, 18, 179, 179, 13, 13, 179, 179, 11, 11, 179, 179, 8, 8, 179, 179, 4, 4, 179];
			for (var c = U; c--;) u = t * (e[c] >> n & 255) + i * (r[c] >> s & 255),
			f = 4 * (u | 0),
			a = 4 * c,
			o[a + 3] = l[f],
			o[a + 2] = l[f + 1],
			o[a + 1] = l[f + 2],
			o[a] = l[f + 3]
		},
		In = function() {
			var e = (hn - it) / xn,
			t = Math.max(0, e | 0),
			n = t / Sn | 0,
			r = t % Sn,
			i = r * 8,
			s = Math.min(t + 1, Tn - 1),
			o = s / Sn | 0,
			u = s % Sn,
			a = u * 8,
			f = nt[n].pixels,
			l = nt[o].pixels;
			if (!f || !l) return ! 1;
			var c = Math.max(0, e - t),
			h = 1 - c;
			return ENV.is_android ? Fn(f, h, i, l, c, a, q.data) : jn(f, h, i, l, c, a, q.data),
			d.putImageData(q, 0, 0),
			Dt(),
			!0
		},
		qn = function() {},
		Rn = function() {
			if (dn) {
				var e = Date.now(),
				t = (e - cn) / 1e3;
				cn = e,
				hn += t * pn,
				hn > ut && (hn = ot)
			}
			qn(),
			(dn || jt) && requestAnimFrame(Rn)
		},
		Un = function() {
			Pt()
		},
		zn = null,
		Wn = !1;
		f.start_animation = function() {
			if (dn) return;
			if (rt.length < 2) return setTimeout(f.start_animation, 250);
			hn || (hn = ot + 1);
			for (var e = rt.length; e--;) if (hn >= rt[e] && hn < rt[e + 1]) {
				mn = nt[e],
				gn = nt[e + 1];
				break
			}
			z == 0 ? pn = 800 : z == 2 ? pn = 3e4: pn = 6e4,
			dn = !0,
			yn = !0,
			cn = Date.now(),
			Rn(),
			zn = setInterval(Un, 100),
			ENV.is_mobile || UIManager.outlook_icons.pause(),
			ENV.is_tablet && (UIManager.overview_icons.pause(), UIManager.stop_wobble()),
			M.removeClass("playing").addClass("playing")
		},
		f.stop_animation = function() {
			dn = !1,
			M.removeClass("playing").addClass("paused"),
			clearInterval(zn),
			Pt(),
			ENV.is_mobile || UIManager.outlook_icons.play(),
			ENV.is_tablet && (UIManager.overview_icons.play(), UIManager.start_wobble())
		};
		var Xn = function(e) {
			e && (e.preventDefault(), e.stopPropagation()),
			dn ? f.stop_animation() : f.start_animation()
		},
		Vn,
		$n = function() {
			c.css("background", "transparent");
			var e = "";
			ENV.is_retina && (ENV.is_tablet ? e = "_1160": e = "_1000"),
			l.addClass("background_loading");
			var t = "http://darkskysatellitemaps.s3.amazonaws.com/" + et.sid + e + ".png?1",
			n = new Image;
			n.onload = function() {
				c.css("background", "transparent url(" + t + ") " + -x + "px 50% no-repeat").css("background-size", (z == 3 ? E: S) + "px"),
				l.removeClass("background_loading")
			},
			n.src = t,
			Vn && Vn.abort();
			
			Vn = $.ajax({
				url: "http://darkskysatellitemaps.s3.amazonaws.com/" + et.sid + "_cities.js",
				dataType: "jsonp"
			})
		};
		f.load_cities = function(e) {
			F.empty();
			var t;
			for (var n = e.length; n--;) {
				t = e[n];
				var r = At(t[1], t[2]);
				$('<span class="city"></span>').css({
					left: r[0] - 4,
					top: r[1] - 6
				}).addClass("size" + t[3]).html("&#9679;" + t[0]).appendTo(F)
			}
		};
		var Jn = function() {
			var e = At(Y, Z);
			I.css({
				left: e[0] - I.width() / 2,
				top: e[1] - I.height() + 6
			}).show()
		},
		Kn = function(e, t) {
			if (e == z && !t) return ! 0;
			dn && f.stop_animation();
			var n = !1;
			for (var i = 0; i < tt.length; i++) if ( + tt[i].sid[0] == e) {
				n = !0,
				et = tt[i];
				break
			}
			if (!n) return ! 1;
			Ct(et.lat, et.lon, et.theta, et.phi, et.zoom),
			z = e,
			l.removeClass("level0").removeClass("level2").removeClass("level3").addClass("level" + z),
			A.empty(),
			z == 0 ? (W = 18, X = 8, V = 1.5, J = 600) : (W = 9, X = 10, V = 174, J = 64800, Sn = 3, xn = J / Sn);
			if (ENV.is_mobile) {
				if (z == 3) f.resize($(window).width(), $(window).width(), 5),
				$("#map .map_container, #map .global_shadow").css("margin-top", ($("#map_area").height() - c.height() - $("#map .top_bar").height()) / 2);
				else {
					var s = $(window).height() - $("#search_area").height() - $("#map .top_bar").height(),
					o = $(window).width();
					f.resize(o, s, 0),
					c.css("margin-top", 0)
				}
				P.css({
					top: $("#map .top_bar").height() + 1,
					height: $("#map_area").height() - $("#map .top_bar").height()
				})
			}
			ir();
			qn = z == 0 ? Cn: G ? Mn: Bn;
			d.clearRect(0, 0, g, y);
			r ? h.css("-moz-transform", "translate(0px, 0px)") : p.style["-webkit-transform"] = "translate3d(0, 0, 0)";
			yn = false;
			hn = Time.now();
			j.find("li").removeClass("selected");
			j.find("li.level" + z).addClass("selected");
			$n();
			
			
			ln();
			Jn();
			return true;
		},
		Qn = false,
		Gn = null,
		Yn = function() {
			Qn = !0,
			$("#map .map_container .loading").show()
		},
		Zn = function(e) {
			if (!Qn) return;
			clearTimeout(Gn);
			if (!nt.length) {
				l.addClass("disabled"),
				$("#map .map_container .loading").hide(),
				$("#map .disabled").show();
				return
			}
			l.removeClass("disabled"),
			$("#map .disabled").hide();
			if (hn < ot || hn > ut) hn = Time.now();
			var t = hn - hn % J,
			n = t + J;
			if (rt.indexOf(t) == -1 || rt.indexOf(n) == -1) {
				if (!e) {
					Gn = setTimeout(Zn, 250);
					return
				}
				hn = ot
			}
			if (!qn()) {
				Gn = setTimeout(Zn, 250);
				return
			}
			Qn = !1,
			Dt(!0),
			Pt(),
			$("#map .map_container .loading").hide()
		},
		er = false,
		tr = null,
		nr = function() {
			if (ENV.is_mobile) return;
			clearTimeout(tr),
			l.removeClass("hide_controls")
		},
		rr = function() {
			if (ENV.is_mobile || er || dn || jt) return;
			clearTimeout(tr),
			tr = setTimeout(function() {
				l.addClass("hide_controls")
			},
			1e3)
		},
		ir = function() {
			for (var e = 0; e < nt.length; e++) nt[e].img = nt[e].pixels = null;
			Ut = [],
			zt = !1,
			rt = [],
			nt = [],
			on = [],
			it = st = 0,
			ot = ut = 0,
			mn = gn = 0,
			hn = Time.now(),
			Ft = !1,
			Yn()
		},
		sr = function() {
			j.empty();
			if (tt.length <= 1) {
				ENV.is_mobile ? $("#map .top_bar .global").show() : $("#map .top_bar").addClass("only_global"),
				j.hide();
				return
			}
			$("#map .top_bar .global").hide(),
			$("#map .top_bar").removeClass("only_global");
			var e = 80;
			for (var t = 0; t < tt.length; t++)(function(t) {
				var n = +tt[t].sid[0],
				r = n == 0 ? "Local": n == 2 ? "Regional": "Global";
				
				$("<li><a>" + r + "</a></li>").
					css("width", e).
					addClass("level" + n).
					click(function(e) {
						e.stopPropagation(),
						e.preventDefault(),
						Kn(n)
					}).appendTo(j);
					
			})(t);
			var n = 1 + tt.length + tt.length * e,
			r = (l.width() - n) / 2;
			j.css({
				width: n
			}),
			$("#map .top_bar .label, #map .top_bar .time").css("width", r),
			j.find("li").removeClass("selected"),
			z != null && j.find("li.level" + z).addClass("selected"),
			j.show()
		},
		or = false;
		f.initialize = function(e) {
			l.bind(
				"mouseover",
				function() {
					er = true,
					nr()
				}
			);
			l.bind(
				"mouseout",
				function() {
					er = false,
					rr()
				}
			);

					
			$("#map .loading").show();

				
			k = $("<canvas />");
			k.css({
				position: "absolute",
				top: -2 * S,
				left: -2 * E
			});
			k.attr("width", g);
			k.attr("height", y);
			k.appendTo($("body"));
			L = k[0].getContext("2d");
			n = true;
			
			if( n ){
				b = ENV.is_iphone ? 0.5 : 1;
				
			}

			
			//ENV.is_mobile || (_.css("width", D), O.find(".play_button").click(Xn));
			
			
			
			P = new Slider(P, {
				change: Ht,
				start: It,
				stop: qt,
				stop_animating_to: Rt,
				move_on_down: false,
				max_speed: 0.2
			});
			
			ENV.is_mobile && (
				P.bind(
					"touchstart",
					function() {
						$("#map .slider .handle").removeClass("minimized")
					}
				), 
				P.bind(
					"touchend",
					function() {
						$("#map .slider .handle").addClass("minimized")
					}
				), 
				P.bind("tap", Xn), 
				$("#map .top_bar").bind(
					"touchmove",
					function(e) {
						e.preventDefault(),
						e.stopPropagation()
					})
			);
			or = true;
			typeof e == "function" && e();
		};
		var ur;
		return f.set = function(e) {
			clearTimeout(ur);
			if (!or) return setTimeout(function() {
				f.set(e)
			},
			200);
			
			Y = e.latitude,
			Z = e.longitude,
			Time.correction = e.currently.time - Math.round((new Date).getTime() / 1e3);
			var t = new Date(1e3 * Time.now());
			t.setHours(0, 0, 0, 0),
			K = Math.round(t.getTime() / 1e3) + 3600 * Forecaster.tz_offset_from_local;
			var n = e.flags.satellites,
			r = n.length != tt.length,
			i = !1,
			s = [!1, !1, !1, !1];
			for (var o = 0; o < n.length; o++) {
				s[ + n[o].sid[0]] = !0;
				if (!tt[o] || tt[o].sid != n[o].sid) r = !0;
				et && et.sid == n[o].sid && (i = !0)
			}
			var u = null;
			if (r) {
				tt = n,
				sr();
				if (Q && z != null && s[z]) u = z;
				else {
					G = false,
					l.removeClass("animation_loaded"),
					Wn = !0;
					var a = ENV.is_mobile ? Math.max(0, tt.length - 2) : Math.max(0, tt.length - 1);
					u = +tt[a].sid[0]
				}
				i || Kn(u, true)
			} (!Q || !i || r && z != u) && Jn(),
			Q = !1
		},
		f.load_animation = function() {
			if (G || !ENV.is_mobile && !nt.length) {
				return;
			}
			$(window).height() < l.height() + l.position().top && $("html, body").animate({
				scrollTop: l.position().top + 10
			},
			250),
			G = true,
			l.addClass("animation_loaded"),
			Kn(z, true)
		},
		$("#map .map_container, #map .load_animation, #map .load_animation_small").click(function() {
			G ? Xn() : f.load_animation(),
			ENV.is_tablet && nr()
		}),
		f.images = function() {
			return nt
		},
		f
	} ();

	var Time = {};
	Time.correction = 0,
	Time.now = function() {
		return Math.round((new Date).getTime() / 1e3) + Time.correction
	},

	Time.BOD = function(e) {
		e || (e = Time.now());
		var t = new Date(e * 1e3);
		return t.setUTCHours(0, 0, 0, 0),
		Math.round(t.getTime() / 1e3)
	};

	var Base64Ajax = function(e, t) {
		var n = function(e) {
			var t = "",
			n, r = new Array(4),
			i = 0,
			s = 0,
			o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
			while (i < e.length) {
				n = new Array(3);
				for (jnx = 0; jnx < n.length; jnx++) i < e.length ? n[jnx] = e.charCodeAt(i++) & 255 : n[jnx] = 0;
				r[0] = n[0] >> 2,
				r[1] = (n[0] & 3) << 4 | n[1] >> 4,
				r[2] = (n[1] & 15) << 2 | n[2] >> 6,
				r[3] = n[2] & 63,
				s = i - (e.length - 1);
				switch (s) {
				case 2:
					r[3] = 64,
					r[2] = 64;
					break;
				case 1:
					r[3] = 64;
					break;
				default:
				}
				for (jnx = 0; jnx < r.length; jnx++) t += o.charAt(r[jnx])
			}
			return t
		},
		r = function(e) {
			if (typeof Uint8Array == "undefined") return n(e);
			var t = "",
			r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
			i = new Uint8Array(e),
			s = i.byteLength,
			o = s % 3,
			u = s - o,
			a,
			f,
			l,
			c,
			h;
			for (var p = 0; p < u; p += 3) h = i[p] << 16 | i[p + 1] << 8 | i[p + 2],
			a = (h & 16515072) >> 18,
			f = (h & 258048) >> 12,
			l = (h & 4032) >> 6,
			c = h & 63,
			t += r[a] + r[f] + r[l] + r[c];
			return o == 1 ? (h = i[u], a = (h & 252) >> 2, f = (h & 3) << 4, t += r[a] + r[f] + "==") : o == 2 && (h = i[u] << 8 | i[u + 1], a = (h & 64512) >> 10, f = (h & 1008) >> 4, l = (h & 15) << 2, t += r[a] + r[f] + r[l] + "="),
			t
		},
		i = function(e, t) {
			var n = new XMLHttpRequest;
			
			e = "/proxy/getamaz.php?" + $.param({url:e});
			
			return "withCredentials" in n ? n.open("GET", e, !0) : typeof XDomainRequest != "undefined" && (n = new XDomainRequest, n.open("GET", e)),
			typeof n.overrideMimeType != "undefined" && n.overrideMimeType("text/plain; charset=x-user-defined"),
			n.responseType = "arraybuffer",
			n.onload = function(e) {
				var i = e.currentTarget && e.currentTarget.response ? e.currentTarget.response: n.responseText;
				t(r(i))
			},
			n.send(),
			n
		};
		return i(e, t)
	};
